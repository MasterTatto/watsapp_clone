{"version":3,"sources":["firebase.js","Components/UserProfile.js","Components/Sidebar.js","Components/Home.js","Components/ChatMessage.js","Components/Chatcontainer.js","Components/ChatPage.js","Components/Login.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseConfig","apiKey","process","API_KEY","authDomain","AUTH_DOMAIN","projectId","PROJECT_ID","storageBucket","STORAGE_BASKET","messagingSenderId","MESSAGE_SENDER_ID","appId","APP_ID","app","firebase","initializeApp","auth","db","firestore","googleProvider","GoogleAuthProvider","UserProfile","name","photoURL","email","lastMessage","timeStamp","navigate","useNavigate","lastDataSend","Date","toDate","toLocaleTimeString","useState","chatMessages","setChatMessages","emailID","useParams","chatUser","setChatUser","console","log","useEffect","getUser","a","collection","doc","onSnapshot","snapshot","data","getMessages","orderBy","newMessage","docs","map","filter","message","senderEmail","receiverEmail","f","isRead","chatUserUnreadMessage","el","className","onClick","emailId","get","then","querySnapshot","forEach","ref","update","length","src","alt","online","Sidebar","currentUser","signOut","allUsers","setAllUsers","searchInput","setSearchInput","friendList","setFriendList","getAllUsers","getFriends","searchItem","user","fullname","toLowerCase","includes","id","type","placeholder","value","onChange","e","target","friend","Home","ChatMessage","time","sender","translateFlag","messageFull","transalteWord","setTranslateWord","whoIsWho","currentimg","params","URLSearchParams","append","axios","post","headers","accept","res","translatedText","style","alignSelf","alignItems","backgroundColor","left","right","top","color","Chatcontainer","setUnreadMessages","setMessage","openEmojiBox","setOpenEmojiBox","chatBox","useRef","setTranslateFlag","current","addEventListener","event","currentTarget","scroll","scrollHeight","behavior","send","preventDefault","currentPayload","text","Timestamp","now","chatUserPayload","add","set","onEmojiClick","emojiObject","emoji","onSubmit","ChatPage","unreadMessages","Login","setUser","signInWithPopup","result","newUser","displayName","localStorage","setItem","JSON","stringify","catch","err","alert","App","parse","getItem","removeItem","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c035b7c4.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nconst firebaseConfig = {\n\tapiKey: process.env.API_KEY,\n\tauthDomain: process.env.AUTH_DOMAIN,\n\tprojectId: process.env.PROJECT_ID,\n\tstorageBucket: process.env.STORAGE_BASKET,\n\tmessagingSenderId: process.env.MESSAGE_SENDER_ID,\n\tappId: process.env.APP_ID,\n};\n\nconst app = firebase.initializeApp(firebaseConfig);\n\nconst auth = firebase.auth();\n\nconst db = app.firestore();\n\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\n\nexport { auth, googleProvider };\n\nexport default db;\n","import React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport db from '../firebase';\nimport './UserProfile.css';\n\nfunction UserProfile({ name, photoURL, email, lastMessage, timeStamp }) {\n\tconst navigate = useNavigate();\n\tconst lastDataSend = new Date(timeStamp?.toDate()).toLocaleTimeString();\n\n\tconst [chatMessages, setChatMessages] = useState([]);\n\tconst { emailID } = useParams();\n\tconst [chatUser, setChatUser] = useState({});\n\n\tconsole.log(email, 'userProfile');\n\tconsole.log(chatMessages, 'userProfile');\n\n\tuseEffect(() => {\n\t\tconst getUser = async () => {\n\t\t\tconst data = await db\n\t\t\t\t.collection('users')\n\t\t\t\t.doc(email)\n\t\t\t\t.onSnapshot((snapshot) => {\n\t\t\t\t\tsetChatUser(snapshot.data());\n\t\t\t\t});\n\t\t};\n\n\t\tconst getMessages = async () => {\n\t\t\tconst data = await db\n\t\t\t\t.collection('chats')\n\t\t\t\t.doc(email)\n\t\t\t\t.collection('messages')\n\t\t\t\t.orderBy('timeStamp', 'asc')\n\t\t\t\t.onSnapshot((snapshot) => {\n\t\t\t\t\tlet messages = snapshot.docs.map((doc) => doc.data());\n\n\t\t\t\t\tlet newMessage = messages.filter((message) => message.senderEmail === (email || emailID) || message.receiverEmail === (email || emailID));\n\n\t\t\t\t\tsetChatMessages(newMessage.filter((f) => !f.isRead && (email || emailID) === f.senderEmail));\n\t\t\t\t});\n\t\t};\n\t\tgetUser();\n\t\tgetMessages();\n\t}, []);\n\n\tconst filter = () => {};\n\n\tuseEffect(() => {\n\t\tconst getUser = async () => {\n\t\t\tconst data = await db\n\t\t\t\t.collection('users')\n\t\t\t\t.doc(email)\n\t\t\t\t.onSnapshot((snapshot) => {\n\t\t\t\t\tsetChatUser(snapshot.data());\n\t\t\t\t});\n\t\t};\n\t\tgetUser();\n\t}, [email]);\n\n\tconst clearRemoveMessage = () => {\n\t\tdb.collection('chats')\n\t\t\t.doc(emailID)\n\t\t\t.collection('messages')\n\t\t\t.get()\n\t\t\t.then(function (querySnapshot) {\n\t\t\t\tquerySnapshot.forEach(function (doc) {\n\t\t\t\t\tdoc.ref.update({\n\t\t\t\t\t\tisRead: true,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t};\n\n\tconst goToUser = (emailId) => {\n\t\tif (emailId) {\n\t\t\tnavigate(`/${emailId}`);\n\t\t\tfilter();\n\t\t}\n\t};\n\tconsole.log(chatMessages);\n\tconst chatUserUnreadMessage = chatMessages.filter((el) => el.isRead === false);\n\n\treturn (\n\t\t<div\n\t\t\tclassName='user-profile'\n\t\t\tonClick={() => {\n\t\t\t\tclearRemoveMessage();\n\t\t\t\tgoToUser(email);\n\t\t\t}}\n\t\t>\n\t\t\t{chatMessages.length > 0 && <div className='unread_message'>{chatUserUnreadMessage.length}</div>}\n\t\t\t<div className='user-image'>\n\t\t\t\t<img src={photoURL} alt='' />\n\t\t\t\t{chatUser.online && <div className='user-active' />}\n\t\t\t</div>\n\t\t\t{/* name of user */}\n\t\t\t<div className='user-info'>\n\t\t\t\t{<span className='last_time'> {lastDataSend} </span>}\n\t\t\t\t<p className='user-name'>{name}</p>\n\n\t\t\t\t{lastMessage && <p className='user-lastmessage'>{lastMessage}</p>}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default UserProfile;\n","import React, { useEffect, useState } from 'react';\nimport TollIcon from '@mui/icons-material/Toll';\nimport InsertCommentIcon from '@mui/icons-material/InsertComment';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport SearchIcon from '@mui/icons-material/Search';\nimport './Sidebar.css';\nimport UserProfile from './UserProfile';\nimport db from '../firebase';\nfunction Sidebar({ currentUser, signOut }) {\n\tconst [allUsers, setAllUsers] = useState([]);\n\tconst [searchInput, setSearchInput] = useState('');\n\tconst [friendList, setFriendList] = useState([]);\n\n\tuseEffect(() => {\n\t\tconst getAllUsers = async () => {\n\t\t\tconst data = await db.collection('users').onSnapshot((snapshot) => {\n\t\t\t\t// setAllUsers(snapshot.docs.filter((doc) => doc.data().email !== currentUser?.email));\n\t\t\t\tsetAllUsers(snapshot.docs.filter((doc) => doc.data().email));\n\t\t\t});\n\t\t};\n\n\t\tconst getFriends = async () => {\n\t\t\tconst data = await db\n\t\t\t\t.collection('Friendlist')\n\t\t\t\t.doc(currentUser.email)\n\t\t\t\t.collection('list')\n\t\t\t\t.onSnapshot((snapshot) => {\n\t\t\t\t\tsetFriendList(snapshot.docs);\n\t\t\t\t});\n\t\t};\n\n\t\tgetAllUsers();\n\t\tgetFriends();\n\t}, []);\n\n\tconst searchedUser = allUsers.filter((user) => {\n\t\tif (searchInput) {\n\t\t\tif (user.data().fullname.toLowerCase().includes(searchInput.toLowerCase())) {\n\t\t\t\treturn user;\n\t\t\t}\n\t\t}\n\t});\n\n\tconst searchItem = searchedUser.map((user) => {\n\t\treturn <UserProfile name={user.data().fullname} photoURL={user.data().photoURL} key={user.id} email={user.data().email} />;\n\t});\n\n\treturn (\n\t\t<div className='sidebar'>\n\t\t\t<div className='sidebar-header'>\n\t\t\t\t<div className='sidebar-header-btn' onClick={signOut}>\n\t\t\t\t\t<div className='burger_item' />\n\t\t\t\t\t<div className='burger_item middle' />\n\t\t\t\t\t<div className='burger_item' />\n\t\t\t\t</div>\n\t\t\t\t<h1 className='h1'>TrueChat</h1>\n\t\t\t\t<div className='sidebar-header-img'>\n\t\t\t\t\t<img src={currentUser?.photoURL} alt='' />\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className='sidebar-search'>\n\t\t\t\t<div className='sidebar-search-input'>\n\t\t\t\t\t<SearchIcon />\n\t\t\t\t\t<input type='text' name='search' placeholder='Search...' value={searchInput} onChange={(e) => setSearchInput(e.target.value)} />\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className='sidebar-chat-list'>\n\t\t\t\t{searchItem.length > 0\n\t\t\t\t\t? searchItem\n\t\t\t\t\t: friendList.map((friend) => (\n\t\t\t\t\t\t\t<UserProfile\n\t\t\t\t\t\t\t\tname={friend.data().fullname}\n\t\t\t\t\t\t\t\tphotoURL={friend.data().photoURL}\n\t\t\t\t\t\t\t\tlastMessage={friend.data().lastMessage}\n\t\t\t\t\t\t\t\temail={friend.data().email}\n\t\t\t\t\t\t\t\ttimeStamp={friend.data().timeStamp}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t  ))}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Sidebar;\n","import React from \"react\";\nimport \"./Home.css\";\nimport Sidebar from \"./Sidebar\";\n\nfunction Home({ currentUser, signOut }) {\n  return (\n    <div className=\"home\">\n      <div className=\"home-container\">\n        {/* SideBar */}\n        <Sidebar currentUser={currentUser} signOut={signOut} />\n        {/* a container with whatsapp-logo */}\n        <div className=\"home-bg\">\n          <img src=\"./WhatsAppbg.png\" alt=\"\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport db, { auth } from '../firebase';\nimport './ChatMessage.css';\nfunction ChatMessage({ message, time, sender, translateFlag, chatUser, currentUser, messageFull }) {\n\tconst [transalteWord, setTranslateWord] = useState(message);\n\tconst { emailID } = useParams();\n\tconst whoIsWho = currentUser.email === sender ? true : false;\n\tconst currentimg = whoIsWho ? currentUser.photoURL : chatUser;\n\tconsole.log(messageFull);\n\t// useEffect(() => {\n\t// \tdb.collection('chats').doc(currentUser.email).collection('messages').set({\n\t// \t\ttext: message,\n\t// \t\tsenderEmail: currentUser.email,\n\t// \t\treceiverEmail: emailID,\n\t// \t\ttimeStamp: time,\n\t// \t\tisRead: true,\n\t// \t});\n\t// }, []);\n\t//шлем запрос на перевод и получаем слово с переводом\n\tuseEffect(() => {\n\t\tif (translateFlag === null) return;\n\t\t//надстройки для CORS\n\t\tconst params = new URLSearchParams();\n\t\tparams.append('q', transalteWord);\n\t\tparams.append('source', translateFlag ? 'en' : 'ru');\n\t\tparams.append('target', translateFlag ? 'ru' : 'en');\n\t\tparams.append('api_key', 'xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx');\n\n\t\taxios\n\t\t\t.post('https://libretranslate.de/translate', params, {\n\t\t\t\theaders: {\n\t\t\t\t\taccept: 'application.json',\n\t\t\t\t\t'Content-type': 'application/x-www-form-urlencoded',\n\t\t\t\t},\n\t\t\t})\n\t\t\t.then((res) => {\n\t\t\t\t// setTranslateMessages([...translateMessages,res.data.translatedText]);\n\t\t\t\tsetTranslateWord(res.data.translatedText);\n\t\t\t});\n\t}, [translateFlag]);\n\n\treturn (\n\t\t<div\n\t\t\tclassName='chat-message'\n\t\t\tstyle={{\n\t\t\t\talignSelf: whoIsWho ? 'flex-end' : 'flex-start',\n\t\t\t\talignItems: whoIsWho ? 'left' : 'left',\n\n\t\t\t\t// backgroundColor: whoIsWho ? '#dcf8c6' : '#fff',\n\t\t\t\tbackgroundColor: whoIsWho ? 'rgb(64, 245, 101)' : '#fff',\n\t\t\t}}\n\t\t>\n\t\t\t<img\n\t\t\t\tsrc={currentimg}\n\t\t\t\talt='user'\n\t\t\t\tclassName='img'\n\t\t\t\tstyle={{\n\t\t\t\t\tleft: !whoIsWho && '-20px',\n\t\t\t\t\tright: whoIsWho && '-20px',\n\t\t\t\t\ttop: '-18px',\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<div\n\t\t\t\tclassName='chat-message-text'\n\t\t\t\tstyle={{\n\t\t\t\t\tcolor: whoIsWho && '#fff',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<p>{transalteWord}</p>\n\t\t\t</div>\n\t\t\t<div className='chat-message-date'>\n\t\t\t\t<p>{new Date(time.toDate()).toLocaleTimeString()}</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default ChatMessage;\n","import React, { useEffect, useRef, useState } from 'react';\nimport './Chatcontainer.css';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport InsertEmoticonIcon from '@mui/icons-material/InsertEmoticon';\nimport ImageIcon from '@mui/icons-material/Image';\nimport AttachFileIcon from '@mui/icons-material/AttachFile';\nimport SendIcon from '@mui/icons-material/Send';\nimport './Chatcontainer.css';\nimport ChatMessage from './ChatMessage';\nimport Picker from 'emoji-picker-react';\nimport { useParams } from 'react-router-dom';\nimport db from '../firebase';\nimport firebase from 'firebase';\nimport axios from 'axios';\n\nfunction Chatcontainer({ currentUser, setUnreadMessages }) {\n\tconst [message, setMessage] = useState('');\n\tconst [openEmojiBox, setOpenEmojiBox] = useState(false);\n\tconst { emailID } = useParams();\n\tconst [chatUser, setChatUser] = useState({});\n\tconst chatBox = useRef(null);\n\tconst [chatMessages, setChatMessages] = useState([]);\n\tconst [translateFlag, setTranslateFlag] = useState(null);\n\n\tuseEffect(() => {\n\t\tconst getUser = async () => {\n\t\t\tconst data = await db\n\t\t\t\t.collection('users')\n\t\t\t\t.doc(emailID)\n\t\t\t\t.onSnapshot((snapshot) => {\n\t\t\t\t\tsetChatUser(snapshot.data());\n\t\t\t\t});\n\t\t};\n\n\t\tconst getMessages = async () => {\n\t\t\tconst data = await db\n\t\t\t\t.collection('chats')\n\t\t\t\t.doc(emailID)\n\t\t\t\t.collection('messages')\n\t\t\t\t.orderBy('timeStamp', 'asc')\n\t\t\t\t.onSnapshot((snapshot) => {\n\t\t\t\t\tlet messages = snapshot.docs.map((doc) => doc.data());\n\n\t\t\t\t\tlet newMessage = messages.filter(\n\t\t\t\t\t\t(message) => message.senderEmail === (currentUser.email || emailID) || message.receiverEmail === (currentUser.email || emailID)\n\t\t\t\t\t);\n\n\t\t\t\t\tsetChatMessages(newMessage);\n\t\t\t\t});\n\t\t};\n\t\tgetUser();\n\t\tgetMessages();\n\t}, [emailID]);\n\n\tuseEffect(() => {\n\t\tchatBox.current.addEventListener('DOMNodeInserted', (event) => {\n\t\t\tconst { currentTarget: target } = event;\n\t\t\ttarget.scroll({ top: target.scrollHeight, behavior: 'smooth' });\n\t\t});\n\t}, [chatMessages]);\n\n\tconst send = async (e) => {\n\t\te.preventDefault();\n\n\t\tif (emailID) {\n\t\t\tlet currentPayload = {\n\t\t\t\ttext: message,\n\t\t\t\tsenderEmail: currentUser.email,\n\t\t\t\treceiverEmail: emailID,\n\t\t\t\ttimeStamp: firebase.firestore.Timestamp.now(),\n\t\t\t\tisRead: false,\n\t\t\t};\n\n\t\t\tlet chatUserPayload = {\n\t\t\t\ttext: message,\n\t\t\t\tsenderEmail: currentUser.email,\n\t\t\t\treceiverEmail: emailID,\n\t\t\t\ttimeStamp: firebase.firestore.Timestamp.now(),\n\t\t\t\tisRead: false,\n\t\t\t};\n\t\t\t// sender\n\t\t\tdb.collection('chats').doc(currentUser.email).collection('messages').add(currentPayload);\n\n\t\t\t// reciever\n\t\t\tdb.collection('chats').doc(emailID).collection('messages').add(chatUserPayload);\n\n\t\t\tdb.collection('Friendlist').doc(currentUser.email).collection('list').doc(emailID).set({\n\t\t\t\temail: chatUser.email,\n\t\t\t\tfullname: chatUser.fullname,\n\t\t\t\tphotoURL: chatUser.photoURL,\n\t\t\t\tlastMessage: message,\n\t\t\t\ttimeStamp: firebase.firestore.Timestamp.now(),\n\t\t\t});\n\n\t\t\tdb.collection('Friendlist').doc(emailID).collection('list').doc(currentUser.email).set({\n\t\t\t\temail: currentUser.email,\n\t\t\t\tfullname: currentUser.fullname,\n\t\t\t\tphotoURL: currentUser.photoURL,\n\t\t\t\tlastMessage: message,\n\t\t\t\ttimeStamp: firebase.firestore.Timestamp.now(),\n\t\t\t});\n\n\t\t\tsetMessage('');\n\t\t}\n\t};\n\tconst clearRemoveMessage = () => {\n\t\tdb.collection('chats')\n\t\t\t.doc(emailID)\n\t\t\t.collection('messages')\n\t\t\t.get()\n\t\t\t.then(function (querySnapshot) {\n\t\t\t\tquerySnapshot.forEach(function (doc) {\n\t\t\t\t\tdoc.ref.update({\n\t\t\t\t\t\tisRead: true,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t};\n\n\tuseEffect(() => {\n\t\tdb.collection('chats')\n\t\t\t.doc(emailID)\n\t\t\t.collection('messages')\n\t\t\t.get()\n\t\t\t.then(function (querySnapshot) {\n\t\t\t\tquerySnapshot.forEach(function (doc) {\n\t\t\t\t\tdoc.ref.update({\n\t\t\t\t\t\tisRead: true,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t}, [emailID, chatMessages]);\n\treturn (\n\t\t<div className='chat-container'>\n\t\t\t<div className='chat-container-header'>\n\t\t\t\t<div className='chat-user-info'>\n\t\t\t\t\t{/* <div className='chat-user-img'>\n\t\t\t\t\t\t<img src={chatUser?.photoURL} alt='' />\n\t\t\t\t\t</div> */}\n\t\t\t\t\t<p>{chatUser?.fullname}</p>\n\t\t\t\t\t{chatUser.online && <span>Active now</span>}\n\t\t\t\t\t{chatUser.online && <div className='active' />}\n\t\t\t\t</div>\n\n\t\t\t\t<div className='chat-container-header-btn'>\n\t\t\t\t\t<MoreVertIcon />\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{/* chatdisplay-container */}\n\n\t\t\t<div className='chat-display-container' ref={chatBox}>\n\t\t\t\t{chatMessages.map((message) => (\n\t\t\t\t\t<ChatMessage\n\t\t\t\t\t\tmessage={message.text}\n\t\t\t\t\t\ttime={message.timeStamp}\n\t\t\t\t\t\tsender={message.senderEmail}\n\t\t\t\t\t\ttranslateFlag={translateFlag}\n\t\t\t\t\t\tchatUser={chatUser.photoURL}\n\t\t\t\t\t\tcurrentUser={currentUser}\n\t\t\t\t\t\tmessageFull={message}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t{/* chatinput */}\n\n\t\t\t<div className='chat-input'>\n\t\t\t\t{/* buttons */}\n\t\t\t\t{openEmojiBox && <Picker onEmojiClick={(event, emojiObject) => setMessage(message + emojiObject.emoji)} />}\n\n\t\t\t\t<div className='chat-input-btn'>\n\t\t\t\t\t<InsertEmoticonIcon onClick={() => setOpenEmojiBox(!openEmojiBox)} />\n\t\t\t\t\t<AttachFileIcon />\n\t\t\t\t\t<ImageIcon />\n\t\t\t\t</div>\n\t\t\t\t{/* text input element */}\n\t\t\t\t<form onSubmit={send}>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tplaceholder='Type a Message'\n\t\t\t\t\t\tvalue={message}\n\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\tsetMessage(e.target.value);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</form>\n\t\t\t\t{/* send button */}\n\t\t\t\t<div className='select'>\n\t\t\t\t\t<span\n\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\tsetTranslateFlag((translateFlag === null && true) || (translateFlag === true && false) || (translateFlag === false && true))\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\tTranslate to {translateFlag ? 'en' : 'ru'}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<div className='chat-input-send-btn' onClick={send}>\n\t\t\t\t\t<SendIcon />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Chatcontainer;\n","import React, { useState } from 'react';\nimport Chatcontainer from './Chatcontainer';\nimport Sidebar from './Sidebar';\nimport './ChatPage.css';\nfunction ChatPage({ currentUser, signOut }) {\n\tconst [unreadMessages, setUnreadMessages] = useState(2);\n\n\treturn (\n\t\t<div className='chatpage'>\n\t\t\t<div className='chatpage-container'>\n\t\t\t\t{/* sidebar */}\n\t\t\t\t<Sidebar currentUser={currentUser} signOut={signOut} unreadMessages={unreadMessages} />\n\t\t\t\t{/* chatcontainer */}\n\t\t\t\t<Chatcontainer currentUser={currentUser} setUnreadMessages={setUnreadMessages} />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default ChatPage;\n","import React from 'react';\nimport db, { auth, googleProvider } from '../firebase';\nimport { useNavigate } from 'react-router-dom';\nimport './Login.css';\n\nfunction Login({ setUser }) {\n\tconst navigate = useNavigate();\n\n\tconst signInWithGoogle = () => {\n\t\tauth\n\t\t\t.signInWithPopup(googleProvider)\n\t\t\t.then((result) => {\n\t\t\t\tconst newUser = {\n\t\t\t\t\tfullname: result.user.displayName,\n\t\t\t\t\temail: result.user.email,\n\t\t\t\t\tphotoURL: result.user.photoURL,\n\t\t\t\t\tonline: true,\n\t\t\t\t};\n\t\t\t\tnavigate('/');\n\t\t\t\tsetUser(newUser);\n\t\t\t\tlocalStorage.setItem('user', JSON.stringify(newUser));\n\t\t\t\tdb.collection('users').doc(result.user.email).set(newUser);\n\t\t\t})\n\t\t\t.catch((err) => alert(err.message));\n\t};\n\n\treturn (\n\t\t<div className='login'>\n\t\t\t<div className='login-container'>\n\t\t\t\t<img className='login-logo' src='./whatsapp-logo.png' alt='' />\n\t\t\t\t<h2 className='login_h2'>Welcome Back</h2>\n\t\t\t\t<p className='login_p'> To keep connected with us please login with you personal info</p>\n\t\t\t\t<button className='login-btn' onClick={signInWithGoogle}>\n\t\t\t\t\tSIGN IN\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Login;\n","import './App.css';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Home from './Components/Home';\n\nimport ChatPage from './Components/ChatPage';\nimport { useState } from 'react';\nimport Login from './Components/Login';\nimport db, { auth } from './firebase';\nfunction App() {\n\tconst [user, setUser] = useState(JSON.parse(localStorage.getItem('user')));\n\n\tconst signOut = () => {\n\t\tauth\n\t\t\t.signOut()\n\t\t\t.then(() => {\n\t\t\t\tsetUser(null);\n\t\t\t\tlocalStorage.removeItem('user');\n\t\t\t\tdb.collection('users').doc(user.email).set({\n\t\t\t\t\temail: user.email,\n\t\t\t\t\tfullname: user.fullname,\n\t\t\t\t\tphotoURL: user.photoURL,\n\t\t\t\t\tonline: false,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((err) => alert(err.message));\n\t};\n\treturn (\n\t\t<Router>\n\t\t\t<div className='App'>\n\t\t\t\t{user ? (\n\t\t\t\t\t<Routes>\n\t\t\t\t\t\t<Route path='/:emailID' element={<ChatPage currentUser={user} signOut={signOut} />} />\n\t\t\t\t\t\t<Route path='/' element={<Home currentUser={user} signOut={signOut} />} />\n\t\t\t\t\t</Routes>\n\t\t\t\t) : (\n\t\t\t\t\t<Login setUser={setUser} />\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}